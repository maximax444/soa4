version: "3.3"

services:
  db:
    container_name: postgres
    image: "postgres:14-alpine"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data/
    ports:
      - "15432:5432"
  pgadmin:
    container_name: demo_pgadmin
    image: "dpage/pgadmin4"
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres@example.ru
      PGADMIN_DEFAULT_PASSWORD: postgres
    ports:
      - "5050:80"

  consul:
    container_name: consul
    image: consul:1.14.2
    ports:
      - "8500:8500"

  service-1-1:
    image: service-1-1
    build:
      context: FirstService
      dockerfile: Dockerfile
    depends_on:
      - db
      - consul
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - SERVER_PORT=8088
    ports:
      - "8088:8088"

  service-1-2:
    image: service-1-2
    build:
      context: FirstService
      dockerfile: Dockerfile
    depends_on:
      - db
      - consul
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - SERVER_PORT=8089
    ports:
      - "8089:8088"

  service-2-1:
    image: service-2-1
    build:
      context: SecondService
      dockerfile: Dockerfile
    depends_on:
      - db
    ports:
      - "8081:8081"

  service-2-2:
    image: service-2-2
    build:
      context: SecondService
      dockerfile: Dockerfile
    depends_on:
      - db
    ports:
      - "8082:8081"

  haproxy:
    image: "haproxy:2.2-alpine"
    container_name: haproxy
    depends_on:
      - service-1-1
      - service-1-2
      - service-2-1
      - service-2-2
    ports:
      - "10000:10000"
      - "10100:10100"
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
